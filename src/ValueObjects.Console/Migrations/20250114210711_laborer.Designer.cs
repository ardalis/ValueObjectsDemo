// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValueObjects.ConsoleDemo;

#nullable disable

namespace ValueObjects.ConsoleDemo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250114210711_laborer")]
    partial class laborer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ValueObjects.ConsoleDemo.Model1.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ValueObjects.ConsoleDemo.Model2.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("ValueObjects.ConsoleDemo.Model3.Laborer", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Laborers");
                });

            modelBuilder.Entity("ValueObjects.ConsoleDemo.Model2.Worker", b =>
                {
                    b.OwnsOne("ValueObjects.ConsoleDemo.Model2.Address", "Address", b1 =>
                        {
                            b1.Property<int>("WorkerId")
                                .HasColumnType("int");

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WorkerId");

                            b1.ToTable("Workers");

                            b1.WithOwner()
                                .HasForeignKey("WorkerId");
                        });

                    b.OwnsOne("ValueObjects.ConsoleDemo.Model2.DateTimeRange", "EmploymentDates", b1 =>
                        {
                            b1.Property<int>("WorkerId")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("WorkerId");

                            b1.ToTable("Workers");

                            b1.WithOwner()
                                .HasForeignKey("WorkerId");
                        });

                    b.OwnsOne("ValueObjects.ConsoleDemo.Model2.Name", "Name", b1 =>
                        {
                            b1.Property<int>("WorkerId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("WorkerId");

                            b1.ToTable("Workers");

                            b1.WithOwner()
                                .HasForeignKey("WorkerId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("EmploymentDates")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("ValueObjects.ConsoleDemo.Model3.Laborer", b =>
                {
                    b.OwnsOne("ValueObjects.ConsoleDemo.Model3.Address", "Address", b1 =>
                        {
                            b1.Property<int>("LaborerId")
                                .HasColumnType("int");

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LaborerId");

                            b1.ToTable("Laborers");

                            b1.WithOwner()
                                .HasForeignKey("LaborerId");
                        });

                    b.OwnsOne("ValueObjects.ConsoleDemo.Model3.DateTimeRange", "EmploymentDates", b1 =>
                        {
                            b1.Property<int>("LaborerId")
                                .HasColumnType("int");

                            b1.Property<DateTime?>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("LaborerId");

                            b1.ToTable("Laborers");

                            b1.WithOwner()
                                .HasForeignKey("LaborerId");
                        });

                    b.OwnsOne("ValueObjects.ConsoleDemo.Model3.Name", "Name", b1 =>
                        {
                            b1.Property<int>("LaborerId")
                                .HasColumnType("int");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("LaborerId");

                            b1.ToTable("Laborers");

                            b1.WithOwner()
                                .HasForeignKey("LaborerId");
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("EmploymentDates")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
